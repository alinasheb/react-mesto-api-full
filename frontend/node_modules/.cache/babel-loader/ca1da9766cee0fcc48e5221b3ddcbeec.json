{"ast":null,"code":"const baseUrl = 'https://auth.nomoreparties.co';\n\nconst getResponseData = res => {\n  if (res.ok) {\n    return res.json();\n  } else {\n    return Promise.reject(`Ошибка:${res.status}`);\n  }\n};\n\nexport const register = (email, password) => {\n  return fetch(`${baseUrl}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => getResponseData(res));\n};\nexport const login = (email, password) => {\n  return fetch(`${baseUrl}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => getResponseData(res));\n};\nexport const getData = token => {\n  return fetch(`${baseUrl}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => getResponseData(res));\n};","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","login","getData","token"],"sources":["C:/Users/Asus/Desktop/проект15/react-mesto-api-full/frontend/src/utils/auth.js"],"sourcesContent":["const baseUrl = 'https://auth.nomoreparties.co';\n\nconst getResponseData = (res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка:${res.status}`);\n    }\n  }\n\n  export const register = (email, password) => {\n    return fetch (`${baseUrl}/signup`, {\n        method: 'POST' ,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        } ,\n        body:  JSON.stringify({email, password})\n    })\n        .then((res) => getResponseData(res));\n  };\n\n  export const login = (email, password) => {\n    return fetch (`${baseUrl}/signin`, {\n        method: 'POST' ,\n        headers: {\n            \"Content-Type\": \"application/json\",\n        } ,\n        body:  JSON.stringify({ email, password })\n        \n    })\n        .then((res) => getResponseData(res));\n  };\n\n  export const getData = (token) => {\n    return fetch (`${baseUrl}/users/me`, {\n        method: 'GET' ,\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${token}`\n        } ,\n        \n    })\n        .then((res) => getResponseData(res));\n  };\n\n\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+BAAhB;;AAEA,MAAMC,eAAe,GAAIC,GAAD,IAAS;EAC7B,IAAIA,GAAG,CAACC,EAAR,EAAY;IACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;EACD,CAFD,MAEO;IACL,OAAOC,OAAO,CAACC,MAAR,CAAgB,UAASJ,GAAG,CAACK,MAAO,EAApC,CAAP;EACD;AACF,CANH;;AAQE,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAC3C,OAAOC,KAAK,CAAG,GAAEX,OAAQ,SAAb,EAAuB;IAC/BY,MAAM,EAAE,MADuB;IAE/BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFsB;IAK/BC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAACP,KAAD;MAAQC;IAAR,CAAf;EALwB,CAAvB,CAAL,CAOFO,IAPE,CAOIf,GAAD,IAASD,eAAe,CAACC,GAAD,CAP3B,CAAP;AAQD,CATM;AAWP,OAAO,MAAMgB,KAAK,GAAG,CAACT,KAAD,EAAQC,QAAR,KAAqB;EACxC,OAAOC,KAAK,CAAG,GAAEX,OAAQ,SAAb,EAAuB;IAC/BY,MAAM,EAAE,MADuB;IAE/BC,OAAO,EAAE;MACL,gBAAgB;IADX,CAFsB;IAK/BC,IAAI,EAAGC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EALwB,CAAvB,CAAL,CAQFO,IARE,CAQIf,GAAD,IAASD,eAAe,CAACC,GAAD,CAR3B,CAAP;AASD,CAVM;AAYP,OAAO,MAAMiB,OAAO,GAAIC,KAAD,IAAW;EAChC,OAAOT,KAAK,CAAG,GAAEX,OAAQ,WAAb,EAAyB;IACjCY,MAAM,EAAE,KADyB;IAEjCC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,iBAAmB,UAASO,KAAM;IAF7B;EAFwB,CAAzB,CAAL,CAQFH,IARE,CAQIf,GAAD,IAASD,eAAe,CAACC,GAAD,CAR3B,CAAP;AASD,CAVM"},"metadata":{},"sourceType":"module"}